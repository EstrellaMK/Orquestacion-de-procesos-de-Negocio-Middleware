/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.procesamientoordenes;

import com.google.gson.Gson;
import java.util.List;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form View
     */
    //Conexión BD
    Conexion con = new Conexion();
    Connection cn = con.conexion();

    //Atributos
    List<Articulo> listaArticulo = new ArrayList<>();
    ArrayList<Articulo> listacarrito = new ArrayList<>();
    Productor productor = new Productor();
    double montoTotal = 0.0;

    public View() {
        initComponents();
        mostrartabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Titulo = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        DNI = new javax.swing.JLabel();
        TF_nombre = new javax.swing.JTextField();
        TF_DNI = new javax.swing.JTextField();
        Producto = new javax.swing.JLabel();
        Cantidad = new javax.swing.JLabel();
        TF_producto = new javax.swing.JTextField();
        TF_cantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        carrito = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        Datos = new javax.swing.JLabel();
        B_agregar = new javax.swing.JButton();
        B_quitar = new javax.swing.JButton();
        labelMontoTotal = new javax.swing.JLabel();
        RUC = new javax.swing.JLabel();
        TF_RUC = new javax.swing.JTextField();
        B_realizarOrden = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Titulo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("FISI TIENDA ÚTILES");

        Nombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Nombre.setText("Nombre");

        DNI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DNI.setText("DNI");

        TF_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_nombreActionPerformed(evt);
            }
        });

        TF_DNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_DNIActionPerformed(evt);
            }
        });

        Producto.setText("Producto");

        Cantidad.setText("Cantidad");

        carrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Articulo", "Precio", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carrito);

        lista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id", "Producto", "Precio"
            }
        ));
        lista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lista);

        Datos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Datos.setText("Ingrese sus datos");

        B_agregar.setText("Agregar");
        B_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_agregarActionPerformed(evt);
            }
        });

        B_quitar.setText("Quitar");
        B_quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_quitarActionPerformed(evt);
            }
        });

        RUC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        RUC.setText("RUC");

        TF_RUC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_RUCActionPerformed(evt);
            }
        });

        B_realizarOrden.setText("Realizar Orden");
        B_realizarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_realizarOrdenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Datos)
                        .addGap(0, 812, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(labelMontoTotal)
                                .addGap(95, 95, 95))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(DNI, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(TF_nombre)
                                            .addComponent(TF_DNI, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(Producto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TF_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(Cantidad)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TF_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(B_agregar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(B_quitar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(RUC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TF_RUC, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(161, 161, 161)
                                        .addComponent(B_realizarOrden)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
            .addComponent(Titulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Datos)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nombre)
                            .addComponent(TF_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DNI)
                            .addComponent(TF_DNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RUC)
                            .addComponent(TF_RUC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Producto)
                            .addComponent(Cantidad)
                            .addComponent(TF_producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TF_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(B_quitar)
                            .addComponent(B_agregar))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(B_realizarOrden)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(labelMontoTotal))
                    .addComponent(jScrollPane2))
                .addGap(124, 124, 124))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TF_DNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_DNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_DNIActionPerformed

    private void TF_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_nombreActionPerformed

    private void B_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_agregarActionPerformed

        DefaultTableModel modelo = (DefaultTableModel) carrito.getModel();

        String nombre = TF_producto.getText();
        int cantidad = Integer.parseInt(TF_cantidad.getText());

        if (cantidad > 0) {

            boolean encontrado = false;
            int i = 0;

            while (i < listacarrito.size() && !encontrado) {
                if (listacarrito.get(i).getNombreArticulo().equals(nombre)) {
                    int nuevaCantidad = listacarrito.get(i).getCantidad() + cantidad;
                    montoTotal = montoTotal + listacarrito.get(i).getPrecioArticulo() * cantidad;
                    listacarrito.get(i).setCantidad(cantidad);

                    modelo.setValueAt(nuevaCantidad, i, 3);

                    encontrado = true;
                }
                i++;
            }

            if (!encontrado) {
                for (Articulo articulo : listaArticulo) {
                    if (articulo.getNombreArticulo().equals(nombre)) {
                        Articulo nuevoArticulo = new Articulo(articulo.getIdArticulo(), articulo.getNombreArticulo(), articulo.getPrecioArticulo(), cantidad);
                        listacarrito.add(nuevoArticulo);
                        modelo.addRow(nuevoArticulo.convertirString());

                        montoTotal = montoTotal + nuevoArticulo.getPrecioArticulo() * nuevoArticulo.getCantidad();
                    }
                }

            }

            montoTotal = Math.round(montoTotal * 100.00) / 100.00;
            labelMontoTotal.setText(Double.toString(montoTotal));

        } else {
            JOptionPane.showMessageDialog(null, "Ingrese una cantidad valida", "Alerta", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_B_agregarActionPerformed

    private void listaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaMouseClicked
        int row = lista.rowAtPoint(evt.getPoint());
        int col = lista.columnAtPoint(evt.getPoint());

        if (row >= 50 && col >= 4) {
            System.out.println("Seleccione un a fila correcta");
        } else {
            TF_producto.setText(listaArticulo.get(row).getNombreArticulo());
            TF_cantidad.setText("0");

        }

    }//GEN-LAST:event_listaMouseClicked

    private void B_quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_quitarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) carrito.getModel();

        int fila = carrito.getSelectedRow();
        int i = 0;
        boolean encontrado = false;
        if (fila >= 0) {
            String articuloEliminar = (String) modelo.getValueAt(fila, 1);

            while (i < listacarrito.size() && !encontrado) {
                if (listacarrito.get(i).getNombreArticulo().equals(articuloEliminar)) {
                    montoTotal = montoTotal - listacarrito.get(i).getPrecioArticulo() * listacarrito.get(i).getCantidad();

                    listacarrito.remove(listacarrito.get(i));
                    modelo.removeRow(fila);
                    encontrado = true;
                }
                i++;
            }
        } else {
            i = 0;
            encontrado = false;
            String nombre = TF_producto.getText();
            int cantidad = Integer.parseInt(TF_cantidad.getText());

            while (i < listacarrito.size() && !encontrado) {
                if (listacarrito.get(i).getNombreArticulo().equals(nombre)) {
                    int nuevaCantidad = listacarrito.get(i).getCantidad() - cantidad;
                    montoTotal = montoTotal - listacarrito.get(i).getPrecioArticulo() * cantidad;
                    listacarrito.get(i).setCantidad(nuevaCantidad);
                    modelo.setValueAt(nuevaCantidad, i, 3);
                    encontrado = true;
                }
                i++;
            }

        }

        montoTotal = Math.round(montoTotal * 100.00) / 100.00;
        labelMontoTotal.setText(Double.toString(montoTotal));
    }//GEN-LAST:event_B_quitarActionPerformed

    private void TF_RUCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_RUCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_RUCActionPerformed

    private void B_realizarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_realizarOrdenActionPerformed
        if (!listacarrito.isEmpty()) {
            String nombre = TF_nombre.getText();
            String dni = TF_DNI.getText();
            String ruc = TF_RUC.getText();
            
            if (!this.existeCliente(dni, ruc)) {
                System.out.println("No existe el cliente... Insertando nuevo cliente");
                this.ingresarCliente(nombre, dni, ruc);
            }
            
            
            Gson convertidor = new Gson();
            Orden orden = new Orden(dni, this.listacarrito, this.montoTotal);
            String mensaje = convertidor.toJson(orden);
            System.out.println(mensaje);
            productor.enviar(mensaje);
            System.out.println("Mensaje: " + mensaje);
            System.out.println("Enviado !");
        } else {
            JOptionPane.showMessageDialog(null, "El carrito está vacío, ingrese un producto antes de hacer el pedido", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_B_realizarOrdenActionPerformed

    /**
     * @param args the command line arguments
     */
    public void mostrartabla() {
        System.out.println("WENAS");
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Id Articulo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Precio");

        lista.setModel(modelo);
        String sql = "";
        sql = "SELECT * FROM articulos";
        String datos[] = new String[3];//Ya que hay 5 datos en la tabla Tutor 
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {

                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);

                Articulo articulo = new Articulo(Integer.parseInt(datos[0]), datos[1], Double.parseDouble(datos[2]));

                listaArticulo.add(articulo);
                modelo.addRow(datos);//Se guarda el nuevo modelo
            }

            lista.setModel(modelo);
        } catch (SQLException ex) {

        }
    }


    
    public void ingresarCliente(String nombre, String dni, String ruc) {
        String sql_insert = "";
        sql_insert = "INSERT INTO cliente VALUES (" + dni + ", '" + nombre + "','" + ruc + "');";
        try {
            PreparedStatement st = cn.prepareStatement(sql_insert);
            st.executeUpdate();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    public boolean existeCliente (String dni, String ruc) {
        String sql_select = "";
        sql_select = "SELECT * FROM cliente WHERE cliente.idCliente = " + dni + " AND cliente.ruc = '" + ruc + "';";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql_select);
            while (rs.next()) {
                return true;
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        return false;
    }
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_agregar;
    private javax.swing.JButton B_quitar;
    private javax.swing.JButton B_realizarOrden;
    private javax.swing.JLabel Cantidad;
    private javax.swing.JLabel DNI;
    private javax.swing.JLabel Datos;
    private javax.swing.JLabel Nombre;
    private javax.swing.JLabel Producto;
    private javax.swing.JLabel RUC;
    private javax.swing.JTextField TF_DNI;
    private javax.swing.JTextField TF_RUC;
    private javax.swing.JTextField TF_cantidad;
    private javax.swing.JTextField TF_nombre;
    private javax.swing.JTextField TF_producto;
    private javax.swing.JLabel Titulo;
    private static javax.swing.JTable carrito;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelMontoTotal;
    private javax.swing.JTable lista;
    // End of variables declaration//GEN-END:variables
}
